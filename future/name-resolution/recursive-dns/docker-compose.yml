version: "3.0"
services:
  # Comcast network
  client-c1:
    container_name: "build-your-own-internet-client-c1"
    build: .
    image: "build-your-own-internet-host"
    hostname: client-c1
    networks:
      one-one-net:
        ipv4_address: 1.1.0.200
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  client-c2:
    container_name: "build-your-own-internet-client-c2"
    build: .
    image: "build-your-own-internet-host"
    hostname: client-c2
    networks:
      one-three-net:
        ipv4_address: 1.3.0.200
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0

  resolver-c:
    container_name: "build-your-own-internet-resolver-c"
    build: .
    image: "build-your-own-internet-host"
    hostname: resolver-c
    networks:
      one-two-net:
        ipv4_address: 1.2.0.100
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0

  router-c2:
    container_name: "build-your-own-internet-router-c2"
    build: .
    image: "build-your-own-internet-router"
    hostname: router-c2
    networks:
      one-three-net:
        ipv4_address: 1.3.0.2
      one-two-net:
        ipv4_address: 1.2.0.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
      - net.ipv4.conf.eth0.rp_filter=0
      - net.ipv4.conf.eth1.rp_filter=0
  router-c3:
    container_name: "build-your-own-internet-router-c3"
    build: .
    image: "build-your-own-internet-router"
    hostname: router-c3
    networks:
      one-one-net:
        ipv4_address: 1.1.0.3
      one-two-net:
        ipv4_address: 1.2.0.3
      two-one-net:
        ipv4_address: 2.1.0.3
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
      - net.ipv4.conf.eth0.rp_filter=0
      - net.ipv4.conf.eth1.rp_filter=0
      - net.ipv4.conf.eth2.rp_filter=0
  # Zayo

networks:
  one-one-net:
    name: "build-your-own-internet-one-one-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      driver: default
      config:
        - subnet: 1.1.0.0/16
  one-two-net:
    name: "build-your-own-internet-one-two-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      driver: default
      config:
        - subnet: 1.2.0.0/16
  one-three-net:
    name: "build-your-own-internet-one-three-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      driver: default
      config:
        - subnet: 1.3.0.0/16
  two-one-net:
    name: "build-your-own-internet-two-one-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      driver: default
      config:
        - subnet: 2.1.0.0/16
